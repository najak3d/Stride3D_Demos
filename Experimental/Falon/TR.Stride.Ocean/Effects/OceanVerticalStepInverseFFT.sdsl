namespace TR.Stride.Ocean
{
    shader OceanVerticalStepInverseFFT : ComputeShaderBase, OceanFastFourierTransformBase
    {
        override void Compute()
        {
			float4 data = PrecomputedData[uint2(Step, streams.DispatchThreadId.y)];
			uint2 inputsIndices = (uint2)data.ba;
			if (PingPong)
			{
				Buffer1[streams.DispatchThreadId.xy] = Buffer0[uint2(streams.DispatchThreadId.x, inputsIndices.x)].xy
					+ ComplexMult(float2(data.r, -data.g), Buffer0[uint2(streams.DispatchThreadId.x, inputsIndices.y)]);
			}
			else
			{
				Buffer0[streams.DispatchThreadId.xy] = Buffer1[uint2(streams.DispatchThreadId.x, inputsIndices.x)].xy
					+ ComplexMult(float2(data.r, -data.g), Buffer1[uint2(streams.DispatchThreadId.x, inputsIndices.y)]);
			}
        }
    };
}